{
	"title":"Java工程师成神之路~（2018修订版）",
	"updateTime":"2018-05-15 08:17:14",
	"content":"Java工程师成神之路~（2018修订版）\n2018年05月14日 09:38:25\n阅读数：1232\n主要版本\t更新时间\t备注\nv1.0\t2015-08-01\t首次发布\nv1.1\t2018-03-12\t增加新技术知识、完善知识体系\n一、基础篇\n\nJVM\n\nJVM内存结构\n\n堆、栈、方法区、直接内存、堆和栈区别\n\nJava内存模型\n\n内存可见性、重排序、顺序一致性、volatile、锁、final\n\n垃圾回收\n\n内存分配策略、垃圾收集器（G1）、GC算法、GC参数、对象存活的判定\n\nJVM参数及调优\n\nJava对象模型\n\noop-klass、对象头\n\nHotSpot\n\n即时编译器、编译优化\n\n类加载机制\n\nclassLoader、类加载过程、双亲委派（破坏双亲委派）、模块化（jboss modules、osgi、jigsaw）\n\n虚拟机性能监控与故障处理工具\n\njps, jstack, jmap、jstat, jconsole, jinfo, jhat, javap, btrace、TProfiler\n\n编译与反编译\n\njavac 、javap 、jad 、CRF\n\nJava基础知识\n\n阅读源代码\n\nString、Integer、Long、Enum、BigDecimal、ThreadLocal、ClassLoader \u0026 URLClassLoader、ArrayList \u0026 LinkedList、 HashMap \u0026 LinkedHashMap \u0026 TreeMap \u0026 CouncurrentHashMap、HashSet \u0026 LinkedHashSet \u0026 TreeSet\n\nJava中各种变量类型\n\n熟悉Java String的使用，熟悉String的各种函数\n\nJDK 6和JDK 7中substring的原理及区别、\n\nreplaceFirst、replaceAll、replace区别、\n\nString对“+”的重载、\n\nString.valueOf和Integer.toString的区别、\n\n字符串的不可变性\n\n自动拆装箱\n\nInteger的缓存机制\n\n熟悉Java中各种关键字\n\ntransient、instanceof、volatile、synchronized、final、static、const 原理及用法。\n\n集合类\n\n常用集合类的使用、ArrayList和LinkedList和Vector的区别 、SynchronizedList和Vector的区别、HashMap、HashTable、ConcurrentHashMap区别、Java 8中stream相关用法、apache集合处理工具类的使用、不同版本的JDK中HashMap的实现的区别以及原因\n\n枚举\n\n枚举的用法、枚举与单例、Enum类\n\nJava IO\u0026Java NIO，并学会使用\n\nbio、nio和aio的区别、三种IO的用法与原理、netty\n\nJava反射与javassist\n\n反射与工厂模式、 java.lang.reflect.*\n\nJava序列化\n\n什么是序列化与反序列化、为什么序列化、序列化底层原理、序列化与单例模式、protobuf、为什么说序列化并不安全\n\n注解\n\n元注解、自定义注解、Java中常用注解使用、注解与反射的结合\n\nJMS\n\n什么是Java消息服务、JMS消息传送模型\n\nJMX\n\njava.lang.management.*、 javax.management.*\n\n泛型\n\n泛型与继承、类型擦除、泛型中K T V E ？ object等的含义、泛型各种用法\n\n单元测试\n\njunit、mock、mockito、内存数据库（h2）\n\n正则表达式\n\njava.lang.util.regex.*\n\n常用的Java工具库\n\ncommons.lang, commons.*... guava-libraries netty\n\n什么是API\u0026SPI\n\n异常\n\n异常类型、正确处理异常、自定义异常\n\n时间处理\n\n时区、时令、Java中时间API\n\n编码方式\n\n解决乱码问题、常用编码方式\n\n语法糖\n\nJava中语法糖原理、解语法糖\n\nJava并发编程\n\n什么是线程，与进程的区别\n\n阅读源代码，并学会使用\n\nThread、Runnable、Callable、ReentrantLock、ReentrantReadWriteLock、Atomic*、Semaphore、CountDownLatch、、ConcurrentHashMap、Executors\n\n线程池\n\n自己设计线程池、submit() 和 execute()\n\n线程安全\n\n死锁、死锁如何排查、Java线程调度、线程安全和内存模型的关系\n\n锁\n\nCAS、乐观锁与悲观锁、数据库相关锁机制、分布式锁、偏向锁、轻量级锁、重量级锁、monitor、锁优化、锁消除、锁粗化、自旋锁、可重入锁、阻塞锁、死锁\n\n死锁\n\nvolatile\n\nhappens-before、编译器指令重排和CPU指令重\n\nsynchronized\n\nsynchronized是如何实现的？synchronized和lock之间关系、不使用synchronized如何实现一个线程安全的单例\n\nsleep 和 wait\n\nwait 和 notify\n\nnotify 和 notifyAll\n\nThreadLocal\n\n写一个死锁的程序\n\n写代码来解决生产者消费者问题\n\n守护线程\n\n守护线程和非守护线程的区别以及用法\n\n二、 进阶篇\n\nJava底层知识\n\n字节码、class文件格式\n\nCPU缓存，L1，L2，L3和伪共享\n\n尾递归\n\n位运算\n\n用位运算实现加、减、乘、除、取余\n\n设计模式\n\n了解23种设计模式\n\n会使用常用设计模式\n\n单例、策略、工厂、适配器、责任链。\n\n实现AOP\n\n实现IOC\n\n不用synchronized和lock，实现线程安全的单例模式\n\nnio和reactor设计模式\n\n网络编程知识\n\ntcp、udp、http、https等常用协议\n\n三次握手与四次关闭、流量控制和拥塞控制、OSI七层模型、tcp粘包与拆包\n\nhttp/1.0 http/1.1 http/2之前的区别\n\nJava RMI，Socket，HttpClient\n\ncookie 与 session\n\ncookie被禁用，如何实现session\n\n用Java写一个简单的静态文件的HTTP服务器\n\n实现客户端缓存功能，支持返回304 实现可并发下载一个文件 使用线程池处理客户端请求 使用nio处理客户端请求 支持简单的rewrite规则 上述功能在实现的时候需要满足“开闭原则”\n\n了解nginx和apache服务器的特性并搭建一个对应的服务器\n\n用Java实现FTP、SMTP协议\n\n进程间通讯的方式\n\n什么是CDN？如果实现？\n\n什么是DNS？\n\n反向代理\n\n框架知识\n\nServlet线程安全问题\n\nServlet中的filter和listener\n\nHibernate的缓存机制\n\nHiberate的懒加载\n\nSpring Bean的初始化\n\nSpring的AOP原理\n\n自己实现Spring的IOC\n\nSpring MVC\n\nSpring Boot2.0\n\nSpring Boot的starter原理，自己实现一个starter\n\nSpring Security\n\n应用服务器知识\n\nJBoss\n\ntomcat\n\njetty\n\nWeblogic\n\n工具\n\ngit \u0026 svn\n\nmaven \u0026 gradle\n\n三、 高级篇\n\n新技术\n\nJava 8\n\nlambda表达式、Stream API、\n\nJava 9\n\nJigsaw、Jshell、Reactive Streams\n\nJava 10\n\n局部变量类型推断、G1的并行Full GC、ThreadLocal握手机制\n\nSpring 5\n\n响应式编程\n\nSpring Boot 2.0\n\n性能优化\n\n使用单例、使用Future模式、使用线程池、选择就绪、减少上下文切换、减少锁粒度、数据压缩、结果缓存\n\n线上问题分析\n\ndump获取\n\n线程Dump、内存Dump、gc情况\n\ndump分析\n\n分析死锁、分析内存泄露\n\n自己编写各种outofmemory，stackoverflow程序\n\nHeapOutOfMemory、 Young OutOfMemory、MethodArea OutOfMemory、ConstantPool OutOfMemory、DirectMemory OutOfMemory、Stack OutOfMemory Stack OverFlow\n\n常见问题解决思路\n\n内存溢出、线程死锁、类加载冲突\n\n使用工具尝试解决以下问题，并写下总结\n\n当一个Java程序响应很慢时如何查找问题、\n\n当一个Java程序频繁FullGC时如何解决问题、\n\n如何查看垃圾回收日志、\n\n当一个Java应用发生OutOfMemory时该如何解决、\n\n如何判断是否出现死锁、\n\n如何判断是否存在内存泄露\n\n编译原理知识\n\n编译与反编译\n\nJava代码的编译与反编译\n\nJava的反编译工具\n\n词法分析，语法分析（LL算法，递归下降算法，LR算法），语义分析，运行时环境，中间代码，代码生成，代码优化\n\n操作系统知识\n\nLinux的常用命令\n\n进程同步\n\n缓冲区溢出\n\n分段和分页\n\n虚拟内存与主存\n\n数据库知识\n\nMySql 执行引擎\n\nMySQL 执行计划\n\n如何查看执行计划，如何根据执行计划进行SQL优化\n\nSQL优化\n\n事务\n\n事务的隔离级别、事务能不能实现锁的功能\n\n数据库锁\n\n行锁、表锁、使用数据库锁实现乐观锁、\n\n数据库主备搭建\n\nbinlog\n\n内存数据库\n\nh2\n\n常用的nosql数据库\n\nredis、memcached\n\n分别使用数据库锁、NoSql实现分布式锁\n\n性能调优\n\n数据结构与算法知识\n\n简单的数据结构\n\n栈、队列、链表、数组、哈希表、\n\n树\n\n二叉树、字典树、平衡树、排序树、B树、B+树、R树、多路树、红黑树\n\n排序算法\n\n各种排序算法和时间复杂度 深度优先和广度优先搜索 全排列、贪心算法、KMP算法、hash算法、海量数据处理\n\n大数据知识\n\nZookeeper\n\n基本概念、常见用法\n\nSolr，Lucene，ElasticSearch\n\n在linux上部署solr，solrcloud，，新增、删除、查询索引\n\nStorm，流式计算，了解Spark，S4\n\n在linux上部署storm，用zookeeper做协调，运行storm hello world，local和remote模式运行调试storm topology。\n\nHadoop，离线计算\n\nHDFS、MapReduce\n\n分布式日志收集flume，kafka，logstash\n\n数据挖掘，mahout\n\n网络安全知识\n\n什么是XSS\n\nXSS的防御\n\n什么是CSRF\n\n什么是注入攻击\n\nSQL注入、XML注入、CRLF注入\n\n什么是文件上传漏洞\n\n加密与解密\n\nMD5，SHA1、DES、AES、RSA、DSA\n\n什么是DOS攻击和DDOS攻击\n\nmemcached为什么可以导致DDos攻击、什么是反射型DDoS\n\nSSL、TLS，HTTPS\n\n如何通过Hash碰撞进行DOS攻击\n\n用openssl签一个证书部署到apache或nginx\n\n四、架构篇\n\n分布式\n\n数据一致性、服务治理、服务降级\n\n分布式事务\n\n2PC、3PC、CAP、BASE、 可靠消息最终一致性、最大努力通知、TCC\n\nDubbo\n\n服务注册、服务发现，服务治理\n\n分布式数据库\n\n怎样打造一个分布式数据库、什么时候需要分布式数据库、mycat、otter、HBase\n\n分布式文件系统\n\nmfs、fastdfs\n\n分布式缓存\n\n缓存一致性、缓存命中率、缓存冗余\n\n微服务\n\nSOA、康威定律\n\nServiceMesh\n\nDocker \u0026 Kubernets\n\nSpring Boot\n\nSpring Cloud\n\n高并发\n\n分库分表\n\nCDN技术\n\n消息队列\n\nActiveMQ\n\n监控\n\n监控什么\n\nCPU、内存、磁盘I/O、网络I/O等\n\n监控手段\n\n进程监控、语义监控、机器资源监控、数据波动\n\n监控数据采集\n\n日志、埋点\n\nDapper\n\n负载均衡\n\ntomcat负载均衡、Nginx负载均衡\n\nDNS\n\nDNS原理、DNS的设计\n\nCDN\n\n数据一致性\n\n五、 扩展篇\n\n云计算\n\nIaaS、SaaS、PaaS、虚拟化技术、openstack、Serverlsess\n\n搜索引擎\n\nSolr、Lucene、Nutch、Elasticsearch\n\n权限管理\n\nShiro\n\n区块链\n\n哈希算法、Merkle树、公钥密码算法、共识算法、Raft协议、Paxos 算法与 Raft 算法、拜占庭问题与算法、消息认证码与数字签名\n\n比特币\n\n挖矿、共识机制、闪电网络、侧链、热点问题、分叉\n\n以太坊\n\n超级账本\n\n人工智能\n\n数学基础、机器学习、人工神经网络、深度学习、应用场景。\n\n常用框架\n\nTensorFlow、DeepLearning4J\n\n其他语言\n\nGroovy、Python、Go、NodeJs、Swift、Rust\n\n六、 推荐书籍\n\n《深入理解Java虚拟机》 《Effective Java》 《深入分析Java Web技术内幕》 《大型网站技术架构》 《代码整洁之道》 《Head First设计模式》 《maven实战》 《区块链原理、设计与应用》 《Java并发编程实战》 《鸟哥的Linux私房菜》 《从Paxos到Zookeeper》 《架构即未来》",
	"sort":3
}